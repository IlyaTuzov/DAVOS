<?xml version="1.0" encoding="UTF-8"?>
<data>

		<!-- platform: Multicore / Grid / GridLight 
            mode = clean / continue
        -->
    <DAVOS
        report_dir = "/home/tuil/HTWEB"
        experiment_label = "ZCU104_Lenet"
        platform = "Multicore"
        maxproc = "4" >


        <ModelConfig
            work_dir = "/home/tuil/Lenet5/MiniLenetFloat_22"
            checkpoint = ""
            design_type = "RTL"
            label = "Lenet"
            clk_period = "10.0"
            simulation_time = "15000"
        />




        <SBFI
            clean_run = "off"
            checkpoint_mode = "ColdRestore"
            initializer = "on"
            profiler = "off"
            injector = "on"
            analyzer = "on"
            reportbuilder = "on"
            time_quota =  "20:00:00"
            fault_dictionary = "./FaultDictionaries/Xilinx_Unisim_Ver.xml"
            >

            <!-- unit path: withing the design scope-->
            <InjectionScope unit_path = "/testbench/cpu/cpu/core0/gpp0/noelv0/cpuloop(0)/core/u0/iu0"
                            node_filter = "r.*"
                            scope_filter = "-internal" />




            <ObservationScope unit_path = "testbench/cpu/cpu/core0/gpp0/noelv0/cpuloop(0)/core/u0/dffrf/rf0"
                              node_filter = "r.*"
                              sampling_options = "-notrigger"
                              scope_filter = "-internal"
                              group = "INTERNALS"
                              label_prefix = "Core0_RegFile_"
                              domain = "Core0"
            />



            <ObservationItem
                path= "/testbench/cpu/cpu/core0/mem0/mig_gen/sim_ram_gen/axi_mem/rb/p/logpages(1).data"
                array_range = "0:127"
                label = "Core0.Res"
                sampling_options = ""
                group = "OUTPUTS"
                domain = "Core0"
            />


			
            <faultload
                model = "BitFlip"
                target_logic = "SIGNAL"
                multiplicity = "1"
                time_mode = "Relative"
                injection_time_start = "0.0"
                injection_time_end = "0.5"
                experiments_per_target = "1"
                sample_size = "100"
                rand_seed	= "10"
                CCF = ""
                stagger_offsets = "10-15, 20-25, 30-35, 40-45, 50-55, 60-100, 110-200, 210-300, 310-500, 510-1000, 1010-2000, 2010-5000"
            />
			



				
			
			
			
            <!-- domain_mode: "" / SIMPLEX / TMR -->
            <Analyzer
                mode = "MLV"
                domain_mode = "SIMPLEX"
                time_window = ""
                max_time_violation = "0"
                error_flag_signal = ""
                error_flag_active_value = "1"
                trap_type_signal = ""
                threads = "4"
                >

                <join_groups>
                </join_groups>

                <rename_list>
                </rename_list>

            </Analyzer>

        </SBFI>



	<!--
		injector: MICROBLAZE / ZYNQ
		target_logic = FF/LUT/BRAM/TYPE0
		mode = 1XX: using essential bits: 101 - sampling, 102 - exhaustive
			   2XX: using external fault list
		injection_time = 0-random, > 0 - inject after that number of clock cycles, e.g. ==1 - inject at the workload start, ==10 - inject after 9 clock cycles
                         start:end - random bounded
		pblock: name: Bottom-Left : Top-Right
                        example:
                            pblock_cpuloop[0].core:tiles:X2Y302:X90Y359
                            pblock_cpuloop[1].core:tiles:X2Y363:X90Y417

                            ACC_Replica_1:tiles:X12Y330:X61Y567
        dut_scope examples: cpu/core0/HLSinf_en.axi_acc_conv_instance/
                            cpu/core0/HLSinf_en.axi_acc_conv_instance2/
                            cpu/core0/gpp0/noelv0/cpuloop[0].core
                            
        dut_script 			    = grmon -u -uart /dev/ttyUSB2 -c /home2/tuil/DAVOS/testconfig/testbench_selene.do
        python /home2/tuil/DAVOS/testconfig/testbench_linux.py
        
            Transient example:
            injection_time 		    = "500000:1500000"
            fault_model             = "1"
            fault_duration          = "1:10"

	-->
        <FFI
			dut_scope 			    = "design_1_i/cnn_0/U0"
			pblock 				    = "TestIP:tiles:X27Y0:X69Y269"
			target_logic 		    = "LUT"
			fault_multiplicity	    = "1"
			sample_size_goal 	    = "1000"
			error_margin_goal 	    = "0.5"            
			injection_time 		    = "0:0"
            fault_model             = "0"
            fault_duration          = "0:0"
            CCF                     = ""            
            dut_script 			    = ""
            failure_modes_to_reset  = "timeout, sdc, linux_crash, testbench_exception"

			injector 			    = "ZYNQ"
            injector_phase 		    = "on"
            reportbuilder_phase     = "on"
			custom_lut_mask 	    = "off"
            node_list               = ""
			mode 				    = "101"
		>
		</FFI>
     </DAVOS>
</data>
